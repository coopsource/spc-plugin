#JSGF V1.0;

/**
 * JSGF Grammar for spoken language syntax
 */

/*
 * Copyright 2011-2014 Benjamin M. Gordon
 * 
 * This file is part of the spoken compiler Eclipse plugin.
 *
 * The spoken compiler Eclipse plugin is free software: 
 * you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The spoken compiler Eclipse plugin is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the spoken compiler Eclipse plugin.
 * If not, see <http://www.gnu.org/licenses/>.
 */

grammar hello;

public <program> = <fragments>+;

<fragments> = <funcFrags>
			| <whileFrags>
			| <assignment>
			| <printFrags>
			| <callFrags>
			| <ifFrags>
			;

<funcFrags> = define function <id>
            | taking no arguments as
            | taking arguments <id> (and <id>)* as
            | end function
            | return <expression>
            ;

<assignment> = Set <id> to <expression>;

<whileFrags> = while <boolExpr> do
			 | end while
			 ;

<printFrags> = print <expression>
             | new line
             ;
             
<callFrags> = call <id>
			| <withFrags>
			;
			
<callExprFrags> = the result of calling <id>
                | <withFrags>
                ;
            
<withFrags> = with <expression> (and <expression>)*
            ;

<ifFrags> = if <boolExpr> then
          | else
          | end if
          ;

<boolExpr> = <expression> <boolop> <expression> ;

<boolop> = less than | greater than | equals | not equals ;

<statement> = ( <assignment> | <print> );

<expression> = <number> | <id> | <callExprFrags>;

<number> = zero | one | two | three | four | five | six | seven | eight | nine | ten;

<id> = X | Y | Z | A | B | C | F | G | M | N | main;

<print> = print <expression>;
